
---

# ðŸ“„ Handling Form Submission in JavaScript

Forms are used to collect user input. By default, **submitting a form reloads the page**.
JavaScript allows you to **intercept the submission** and process the data dynamically.

---

## 1. Preventing Default Behavior

* Use `event.preventDefault()` to **stop the browser from refreshing**.

### Example:

```html
<form>
  <input type="text" placeholder="Name">
  <input type="email" placeholder="Email">
  <button type="submit">Submit</button>
</form>

<script>
let formEl = document.querySelector('form');

formEl.addEventListener('submit', function(event) {
    event.preventDefault();  // stops page reload
    console.log('Form submitted');
});
</script>
```

âœ… Now, the form can be handled **without refreshing the page**.

---

## 2. Accessing Form Elements

* You can access form fields using **`form.elements`**.
* `form.elements` is an **HTMLCollection** of all input/select/textarea elements inside the form.

### Example:

```js
let formEl = document.querySelector('form');

formEl.addEventListener('submit', function(e) {
    e.preventDefault();   // stop reload
    
    // Access each input by index
    console.log(formEl.elements[0].value); // value of first input
    console.log(formEl.elements[1].value); // value of second input
});
```

* `form.elements[0]` â†’ first input (`Name`)
* `form.elements[1]` â†’ second input (`Email`)

---

## 3. Bonus: Access by `name` Attribute

```html
<input type="text" name="username">
<input type="email" name="useremail">
```

```js
console.log(formEl.elements.username.value);
console.log(formEl.elements.useremail.value);
```

âœ… This is often cleaner than using numeric indices.

---

# âœ… Key Points

| Concept                  | Description                               |
| ------------------------ | ----------------------------------------- |
| `submit` event           | Fires when form is submitted              |
| `event.preventDefault()` | Stops the default page reload             |
| `form.elements`          | Access all input/select/textarea elements |
| Access by index          | `form.elements[0].value`                  |
| Access by name           | `form.elements.name.value`                |

---

ðŸ“Œ **Best Practice:**

* Always use `preventDefault()` when handling form submissions with JavaScript.
* Use **names** for inputs for cleaner code.
* Validate input values before processing or sending to the server.

---

